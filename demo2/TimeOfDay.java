// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `interface.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package demo2;

public class TimeOfDay implements java.lang.Cloneable, java.io.Serializable
{
    public short hour;

    public short minute;

    public short second;

    public TimeOfDay()
    {
    }

    public TimeOfDay(short hour, short minute, short second)
    {
        this.hour = hour;
        this.minute = minute;
        this.second = second;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TimeOfDay _r = null;
        if(rhs instanceof TimeOfDay)
        {
            _r = (TimeOfDay)rhs;
        }

        if(_r != null)
        {
            if(hour != _r.hour)
            {
                return false;
            }
            if(minute != _r.minute)
            {
                return false;
            }
            if(second != _r.second)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::demo2::TimeOfDay");
        __h = IceInternal.HashUtil.hashAdd(__h, hour);
        __h = IceInternal.HashUtil.hashAdd(__h, minute);
        __h = IceInternal.HashUtil.hashAdd(__h, second);
        return __h;
    }

    public TimeOfDay
    clone()
    {
        TimeOfDay c = null;
        try
        {
            c = (TimeOfDay)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeShort(hour);
        __os.writeShort(minute);
        __os.writeShort(second);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        hour = __is.readShort();
        minute = __is.readShort();
        second = __is.readShort();
    }

    static public void
    __write(IceInternal.BasicStream __os, TimeOfDay __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TimeOfDay
    __read(IceInternal.BasicStream __is, TimeOfDay __v)
    {
        if(__v == null)
        {
             __v = new TimeOfDay();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TimeOfDay __nullMarshalValue = new TimeOfDay();

    public static final long serialVersionUID = -7727488992837306845L;
}
