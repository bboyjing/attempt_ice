// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `Goodbye.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package cn.didadu.generate.goodbye;

/**
 * Provides type-specific helper functions.
 **/
public final class ByePrxHelper extends Ice.ObjectPrxHelperBase implements ByePrx
{
    private static final String __sayGoodbye_name = "sayGoodbye";

    public void sayGoodbye()
    {
        sayGoodbye(null, false);
    }

    public void sayGoodbye(java.util.Map<String, String> __ctx)
    {
        sayGoodbye(__ctx, true);
    }

    private void sayGoodbye(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_sayGoodbye(begin_sayGoodbye(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_sayGoodbye()
    {
        return begin_sayGoodbye(null, false, false, null);
    }

    public Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx)
    {
        return begin_sayGoodbye(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_sayGoodbye(Ice.Callback __cb)
    {
        return begin_sayGoodbye(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_sayGoodbye(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sayGoodbye(Callback_Bye_sayGoodbye __cb)
    {
        return begin_sayGoodbye(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, Callback_Bye_sayGoodbye __cb)
    {
        return begin_sayGoodbye(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_sayGoodbye(IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sayGoodbye(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sayGoodbye(IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sayGoodbye(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_sayGoodbye(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sayGoodbye(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_sayGoodbye(__ctx, 
                                __explicitCtx, 
                                __synchronous, 
                                new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_sayGoodbye(java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__sayGoodbye_name, __cb);
        try
        {
            __result.prepare(__sayGoodbye_name, Ice.OperationMode.Idempotent, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_sayGoodbye(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __sayGoodbye_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ByePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), ByePrx.class, ByePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ByePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), ByePrx.class, ByePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ByePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), ByePrx.class, ByePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static ByePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), ByePrx.class, ByePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static ByePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, ByePrx.class, ByePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static ByePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, ByePrx.class, ByePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::goodbye::Bye"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, ByePrx v)
    {
        __os.writeProxy(v);
    }

    public static ByePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            ByePrxHelper result = new ByePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
